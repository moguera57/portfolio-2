{"version":3,"sources":["components/Portfolio.js","components/Home.js","components/Navbar.js","components/Footer.js","components/NoMatch.js","components/About.js","components/Resume.js","App.js","serviceWorker.js","index.js"],"names":["Portfolio","props","react_default","a","createElement","className","href","link","title","alt","src","img","desc","Home","state","text","color","subtitle","listenScrollEvent","e","window","scrollY","_this","setState","addEventListener","this","removeEventListener","style","background","class","portItems","map","port","components_Portfolio","id","key","Component","Navbar","process","Footer","NoMatch","About","Resume","App","components_Navbar","react_router_dom","react_router","exact","path","component","components_Footer","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3f17b46e.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Portfolio(props) {\n    return (\n        <div className=\"card\">\n          <div className=\"img-container\">\n            <a href={props.link}><h1>{props.title}</h1></a>\n            <img alt={props.title} src={props.img} />\n            <p>{props.desc}</p>\n          </div>\n        </div>\n    );\n  }\n  \n\nexport default Portfolio","import React, { Component } from \"react\";\nimport Portfolio from \"./Portfolio\";\nimport portItems from './portItems.json'\n\n\nclass Home extends Component{        \n        state = {\n            text: '#fff',\n            color: '#9883E4',\n            subtitle: 'Web Designer | Web Developer'\n          }\n        \n        listenScrollEvent = e => {\n            if (window.scrollY > 5) {\n                this.setState({subtitle: 'Portfolio Work', color: '#fff', text: '#000'})\n            } else {\n                this.setState({subtitle: 'Web Designer | Web Developer', color: '#9883E4', text: '#fff'})\n            }\n        }\n    \n        componentDidMount(){\n            window.addEventListener('scroll', this.listenScrollEvent)\n        }\n        \n        componentWillUnmount(){\n            window.removeEventListener('scroll', this.listenScrollEvent)\n        }\n\n    render(){\n        return(\n        <div>\n            <div style={{background: this.state.color}} className=\"full-page\">\n                <div style={{color: this.state.text}} className=\"centered-name\">\n                    <h1>Joseph Banwart</h1>\n                    <h2>{this.state.subtitle}</h2>\n                </div>\n            </div>\n            <p>Lorem ipsum dolor amet locavore brooklyn hammock jianbing shabby chic blue bottle seitan fixie man bun meditation kitsch wolf. Brunch ramps deep v, kickstarter viral shaman lomo. Tousled subway tile retro chia lumbersexual everyday carry jean shorts truffaut try-hard asymmetrical. Post-ironic offal meh ugh XOXO blog coloring book gochujang vape tumblr iPhone plaid tilde helvetica knausgaard.Freegan pabst artisan 90's, tacos actually kogi. Fanny pack keytar meditation umami mixtape paleo bicycle rights. Snackwave etsy kinfolk pop-up neutra twee iceland waistcoat hashtag kale chips beard meggings la croix tote bag quinoa. Tumblr aesthetic food truck lumbersexual thundercats tofu live-edge. Humblebrag cornhole iceland green juice fam gentrify man braid, raclette umami activated charcoal.Vice etsy biodiesel selvage, +1 blue bottle hexagon green juice subway tile. Street art pitchfork beard four loko artisan iPhone. Scenester skateboard next level waistcoat meggings shabby chic af ugh, selfies coloring book cornhole plaid try-hard 8-bit vaporware. Meh distillery salvia schlitz ramps mustache.</p>\n            <div class=\"card-container\">\n                {portItems.map(port=> (\n                    <Portfolio\n                    id={port.id}\n                    key={port.id}\n                    title={port.title}\n                    img={port.img}\n                    desc={port.desc}\n                />\n                ))}\n            </div>\n        </div>\n        )\n    }\n}\n\nexport default Home","import React, { Component } from \"react\";\n\nclass Navbar extends Component{\n\n    render(){\n\n        return(\n            <nav>\n                <ul>\n                    <li><a href={process.env.PUBLIC_URL + '/potfolio'}>Portfolio</a></li>\n                    <li><a href={process.env.PUBLIC_URL + '/about'}>About Me</a></li>\n                    <li><a href={process.env.PUBLIC_URL + '/resume'}>Resume</a></li>\n                </ul>\n            </nav>\n        )\n    }\n}\n\nexport default Navbar","import React, { Component } from \"react\";\n\nclass Footer extends Component{\n    render(){\n        return(\n            <footer>\n                <p>Copyright Joseph Banwart 2019</p>\n            </footer>\n        )\n    }\n}\n\nexport default Footer","import React, { Component } from \"react\";\n\nclass NoMatch extends Component{\n    render(){\n        return(\n            <div>\n                <p>No Match Dummy</p>\n            </div>\n        )\n    }\n}\n\nexport default NoMatch","import React, { Component } from \"react\";\n\nclass About extends Component{\n    render(){\n        return(\n            <div>\n                <p>About</p>\n            </div>\n        )\n    }\n}\n\nexport default About","import React, { Component } from \"react\";\n\nclass Resume extends Component{\n    render(){\n        return(\n            <div>\n                <p>Resume</p>\n            </div>\n        )\n    }\n}\n\nexport default Resume","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from './components/Home'\nimport Navbar from './components/Navbar'\nimport Footer from './components/Footer'\nimport NoMatch from './components/NoMatch'\nimport About from './components/About'\nimport Resume from './components/Resume'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Navbar />\n        <Router>\n          <Switch>\n            <Route exact path={process.env.PUBLIC_URL + '/'} component={Home} />\n            <Route exact path={process.env.PUBLIC_URL + '/about'} component={About} />\n            <Route exact path={process.env.PUBLIC_URL + '/resume'} component={Resume} />\n            <Route component={NoMatch} />\n          </Switch>\n        </Router>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}